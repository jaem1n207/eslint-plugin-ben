name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: read # for checkout

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 21
          cache: npm
      - run: npm ci

      - name: Test build package on node@21 (current)
        run: |
          node --version
          npm --version
          npm run test

      # Not using a matrix here since it's simpler
      # to just duplicate it and not spawn new instances
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: test build package on node@20 (LTS)
        run: |
          node --version
          npm --version
          npm run test

      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: test build package on node@18 (LTS)
        run: |
          node --version
          npm --version
          npm run test

      - name: Build package
        run: npm run build

      - uses: actions/setup-node@v4
        with:
          node-version: '>=20.8.1' 
          cache: 'npm'

      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures

      - name: Action For Semantic Release
        uses: cycjimmy/semantic-release-action@v4.0.0
        id: semantic
        with:
          branches: |
            [
              "main"
            ]
          extra_plugins: |
            - "@semantic-release/commit-analyzer"
            - "@semantic-release/release-notes-generator"
            - "@semantic-release/changelog"
            - "@semantic-release/npm"
            - "@semantic-release/github"
            - "@semantic-release/git"
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.RELEASE_NPM_TOKEN }}

      - name: Do something when a new release published
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          echo ${{ steps.semantic.outputs.new_release_version }}
          echo ${{ steps.semantic.outputs.new_release_major_version }}
          echo ${{ steps.semantic.outputs.new_release_minor_version }}
          echo ${{ steps.semantic.outputs.new_release_patch_version }}

      # https://www.npmjs.com/package/eslint-plugin-ben
      - name: Setup Node.js with GitHub Package Registry
        uses: actions/setup-node@v4
        with:
          node-version: 21
          registry-url: https://npm.pkg.github.com
          scope: 'eslint-plugin-ben'

      - name: Publish to GitHub Package Registry
        if: steps.semantic.outputs.new_release_published == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push updates to branch for major version
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          git config --local user.email "roy.jm.lee@gmail.com"
          git config --local user.name "jaem1n207"
          git checkout -b "v${{ steps.semantic.outputs.new_release_major_version }}"
          git add .
          git commit -m "chore: release v${{ steps.semantic.outputs.new_release_major_version }}"
          git push origin "v${{ steps.semantic.outputs.new_release_major_version }}"
        env: 
          GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
